# Generated by Django 5.1.3 on 2024-12-05 10:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CadrModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("image", models.FileField(upload_to="cadr/", verbose_name="image")),
            ],
            options={
                "verbose_name": "CadrModel",
                "verbose_name_plural": "CadrModels",
                "db_table": "cadr",
            },
        ),
        migrations.CreateModel(
            name="CategoryModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                ("name_uz", models.CharField(max_length=255, null=True, verbose_name="name")),
                ("name_ru", models.CharField(max_length=255, null=True, verbose_name="name")),
                ("name_en", models.CharField(max_length=255, null=True, verbose_name="name")),
                ("position", models.PositiveIntegerField(default=0, verbose_name="position")),
            ],
            options={
                "verbose_name": "CategoryModel",
                "verbose_name_plural": "CategoryModels",
                "db_table": "category",
                "ordering": ["position"],
            },
        ),
        migrations.CreateModel(
            name="GenreModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                ("name_uz", models.CharField(max_length=255, null=True, verbose_name="name")),
                ("name_ru", models.CharField(max_length=255, null=True, verbose_name="name")),
                ("name_en", models.CharField(max_length=255, null=True, verbose_name="name")),
            ],
            options={
                "verbose_name": "GenreModel",
                "verbose_name_plural": "GenreModels",
                "db_table": "genre",
            },
        ),
        migrations.CreateModel(
            name="IstoryVideoModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("video", models.FileField(upload_to="video/", verbose_name="video")),
            ],
            options={
                "verbose_name": "IstoryvideoModel",
                "verbose_name_plural": "IstoryvideoModels",
                "db_table": "istoryvideo",
            },
        ),
        migrations.CreateModel(
            name="MediaModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("video", models.FileField(upload_to="video/", verbose_name="video")),
                ("skip_start_time", models.DurationField(blank=True, null=True, verbose_name="skip_start_time")),
                ("skip_end_time", models.DurationField(blank=True, null=True, verbose_name="skip_end_time")),
                ("position", models.PositiveIntegerField(blank=True, null=True, verbose_name="position")),
            ],
            options={
                "verbose_name": "MediaModel",
                "verbose_name_plural": "MediaModels",
                "db_table": "media",
                "ordering": ["-position"],
            },
        ),
        migrations.CreateModel(
            name="PostModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("desc", models.TextField(verbose_name="desc")),
            ],
            options={
                "verbose_name": "PostModel",
                "verbose_name_plural": "PostModels",
                "db_table": "post",
            },
        ),
        migrations.CreateModel(
            name="TagModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                ("name_uz", models.CharField(max_length=255, null=True, verbose_name="name")),
                ("name_ru", models.CharField(max_length=255, null=True, verbose_name="name")),
                ("name_en", models.CharField(max_length=255, null=True, verbose_name="name")),
            ],
            options={
                "verbose_name": "TagModel",
                "verbose_name_plural": "TagModels",
                "db_table": "tag",
            },
        ),
        migrations.CreateModel(
            name="ContentModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=300, verbose_name="title")),
                ("title_uz", models.CharField(max_length=300, null=True, verbose_name="title")),
                ("title_ru", models.CharField(max_length=300, null=True, verbose_name="title")),
                ("title_en", models.CharField(max_length=300, null=True, verbose_name="title")),
                ("description", models.TextField(verbose_name="description")),
                ("description_uz", models.TextField(null=True, verbose_name="description")),
                ("description_ru", models.TextField(null=True, verbose_name="description")),
                ("description_en", models.TextField(null=True, verbose_name="description")),
                ("poster_desktop", models.ImageField(upload_to="poster/", verbose_name="poster_desktop")),
                ("poster_mobile", models.ImageField(upload_to="poster/", verbose_name="poster_mobile")),
                ("poster_card", models.ImageField(upload_to="poster/", verbose_name="poster_card")),
                ("poster_video", models.FileField(upload_to="poster/", verbose_name="poster_video")),
                ("age_limit", models.PositiveIntegerField(verbose_name="age_limit")),
                ("release_date", models.DateField(verbose_name="release_date")),
                ("cadrs", models.ManyToManyField(blank=True, to="api.cadrmodel", verbose_name="kadrs")),
                ("category", models.ManyToManyField(to="api.categorymodel", verbose_name="category")),
                ("genre", models.ManyToManyField(to="api.genremodel", verbose_name="genre")),
                (
                    "chronology",
                    models.ManyToManyField(
                        blank=True, related_name="chronology", to="api.mediamodel", verbose_name="chronology"
                    ),
                ),
                (
                    "contents",
                    models.ManyToManyField(related_name="contents", to="api.mediamodel", verbose_name="contents"),
                ),
                (
                    "ova",
                    models.ManyToManyField(blank=True, related_name="ova", to="api.mediamodel", verbose_name="ova"),
                ),
                ("tags", models.ManyToManyField(blank=True, to="api.tagmodel", verbose_name="tags")),
            ],
            options={
                "verbose_name": "ContentModel",
                "verbose_name_plural": "ContentModels",
                "db_table": "contents",
            },
        ),
        migrations.CreateModel(
            name="BannerModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("content", models.CharField(max_length=255, verbose_name="content")),
                ("content_uz", models.CharField(max_length=255, null=True, verbose_name="content")),
                ("content_ru", models.CharField(max_length=255, null=True, verbose_name="content")),
                ("content_en", models.CharField(max_length=255, null=True, verbose_name="content")),
                ("position", models.PositiveIntegerField(default=0, verbose_name="position")),
                (
                    "film",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.contentmodel", verbose_name="film"
                    ),
                ),
            ],
            options={
                "verbose_name": "BannerModel",
                "verbose_name_plural": "BannerModels",
                "db_table": "banner",
                "ordering": ["position"],
            },
        ),
        migrations.CreateModel(
            name="IstoryModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("content", models.TextField(verbose_name="content")),
                ("content_uz", models.TextField(null=True, verbose_name="content")),
                ("content_ru", models.TextField(null=True, verbose_name="content")),
                ("content_en", models.TextField(null=True, verbose_name="content")),
                ("position", models.PositiveIntegerField(default=0, verbose_name="position")),
                ("videos", models.ManyToManyField(to="api.istoryvideomodel")),
            ],
            options={
                "verbose_name": "IstoryModel",
                "verbose_name_plural": "IstoryModels",
                "db_table": "istory",
                "ordering": ["position"],
            },
        ),
        migrations.CreateModel(
            name="IntervalModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("items", models.ManyToManyField(to="api.mediamodel", verbose_name="items")),
            ],
            options={
                "verbose_name": "IntervalModel",
                "verbose_name_plural": "IntervalModels",
                "db_table": "interval",
            },
        ),
    ]
